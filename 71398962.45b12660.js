(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{119:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),c=(n(0),n(147)),l={id:"api-reference-content-block",title:"ContentBlock"},i={id:"api-reference-content-block",title:"ContentBlock",description:"ContentBlock is an Immutable",source:"@site/../docs/APIReference-ContentBlock.md",permalink:"/docs/api-reference-content-block",editUrl:"https://github.com/facebook/draft-js/edit/master/docs/../docs/APIReference-ContentBlock.md",lastUpdatedBy:"Rounak Agarwal",lastUpdatedAt:1595959264,sidebar:"docs",previous:{title:"ContentState",permalink:"/docs/api-reference-content-state"},next:{title:"CharacterMetadata",permalink:"/docs/api-reference-character-metadata"}},b=[{value:"Representing styles and entities",id:"representing-styles-and-entities",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Methods",id:"methods",children:[{value:"<code>getKey()</code>",id:"getkey",children:[]},{value:"<code>getType()</code>",id:"gettype",children:[]},{value:"<code>getText()</code>",id:"gettext",children:[]},{value:"<code>getCharacterList()</code>",id:"getcharacterlist",children:[]},{value:"<code>getLength()</code>",id:"getlength",children:[]},{value:"<code>getDepth()</code>",id:"getdepth",children:[]},{value:"<code>getInlineStyleAt()</code>",id:"getinlinestyleat",children:[]},{value:"<code>getEntityAt()</code>",id:"getentityat",children:[]},{value:"<code>getData()</code>",id:"getdata",children:[]},{value:"<code>findStyleRanges()</code>",id:"findstyleranges",children:[]},{value:"<code>findEntityRanges()</code>",id:"findentityranges",children:[]}]},{value:"Properties",id:"properties",children:[{value:"<code>key</code>",id:"key",children:[]},{value:"<code>text</code>",id:"text",children:[]},{value:"<code>type</code>",id:"type",children:[]},{value:"<code>characterList</code>",id:"characterlist",children:[]},{value:"<code>depth</code>",id:"depth",children:[]},{value:"<code>data</code>",id:"data",children:[]}]}],o={rightToc:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," is an Immutable\n",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://web.archive.org/web/20150623131347/http://facebook.github.io:80/immutable-js/docs/#/Record"}),"Record"),"\nthat represents the full state of a single block of editor content, including:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Plain text contents of the block"),Object(c.b)("li",{parentName:"ul"},"Type, e.g. paragraph, header, list item"),Object(c.b)("li",{parentName:"ul"},"Entity, inline style, and depth information")),Object(c.b)("p",null,"A ",Object(c.b)("inlineCode",{parentName:"p"},"ContentState")," object contains an ",Object(c.b)("inlineCode",{parentName:"p"},"OrderedMap")," of these ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," objects,\nwhich together comprise the full contents of the editor."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," objects are largely analogous to block-level HTML elements like\nparagraphs and list items. The available types are:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"unstyled"),Object(c.b)("li",{parentName:"ul"},"paragraph"),Object(c.b)("li",{parentName:"ul"},"header-one"),Object(c.b)("li",{parentName:"ul"},"header-two"),Object(c.b)("li",{parentName:"ul"},"header-three"),Object(c.b)("li",{parentName:"ul"},"header-four"),Object(c.b)("li",{parentName:"ul"},"header-five"),Object(c.b)("li",{parentName:"ul"},"header-six"),Object(c.b)("li",{parentName:"ul"},"unordered-list-item"),Object(c.b)("li",{parentName:"ul"},"ordered-list-item"),Object(c.b)("li",{parentName:"ul"},"blockquote"),Object(c.b)("li",{parentName:"ul"},"code-block"),Object(c.b)("li",{parentName:"ul"},"atomic")),Object(c.b)("p",null,"New ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," objects may be created directly using the constructor.\nExpected Record values are detailed below."),Object(c.b)("h3",{id:"representing-styles-and-entities"},"Representing styles and entities"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"characterList")," field is an immutable ",Object(c.b)("inlineCode",{parentName:"p"},"List")," containing a ",Object(c.b)("inlineCode",{parentName:"p"},"CharacterMetadata"),"\nobject for every character in the block. This is how we encode styles and\nentities for a given block."),Object(c.b)("p",null,"By making heavy use of immutability and data persistence for these lists and\n",Object(c.b)("inlineCode",{parentName:"p"},"CharacterMetadata")," objects, edits to the content generally have little impact\non the memory footprint of the editor."),Object(c.b)("p",null,"By encoding inline styles and entities together in this way, a function that\nperforms edits on a ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," can perform slices, concats, and other List\nmethods on a single ",Object(c.b)("inlineCode",{parentName:"p"},"List")," object."),Object(c.b)("p",null,"When creating a new ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," containing ",Object(c.b)("inlineCode",{parentName:"p"},"text")," and without ",Object(c.b)("inlineCode",{parentName:"p"},"characterList"),"\nit then will default to a ",Object(c.b)("inlineCode",{parentName:"p"},"characterList")," with empty ",Object(c.b)("inlineCode",{parentName:"p"},"CharacterMetadata")," for the\nsupplied text."),Object(c.b)("h2",{id:"overview"},"Overview"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Methods")),Object(c.b)("ul",{class:"apiIndex"},Object(c.b)("li",null,Object(c.b)("a",{href:"#getkey"},Object(c.b)("pre",null,"getKey(): string"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#gettype"},Object(c.b)("pre",null,"getType(): DraftBlockType"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#gettext"},Object(c.b)("pre",null,"getText(): string"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#getcharacterlist"},Object(c.b)("pre",null,"getCharacterList(): List<CharacterMetadata>"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#getlength"},Object(c.b)("pre",null,"getLength(): number"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#getdepth"},Object(c.b)("pre",null,"getDepth(): number"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#getinlinestyleat"},Object(c.b)("pre",null,"getInlineStyleAt(offset: number): DraftInlineStyle"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#getentityat"},Object(c.b)("pre",null,"getEntityAt(offset: number): ?string"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#getdata"},Object(c.b)("pre",null,"getData(): Map<any, any>"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#findstyleranges"},Object(c.b)("pre",null,"findStyleRanges(filterFn: Function, callback: Function): void"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#findentityranges"},Object(c.b)("pre",null,"findEntityRanges(filterFn: Function, callback: Function): void")))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Properties")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Note"),Object(c.b)("p",{parentName:"blockquote"},"Use ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://web.archive.org/web/20150623131347/http://facebook.github.io:80/immutable-js/docs/#/Map"}),"Immutable Map API"),"\nfor the ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," constructor or to set properties.")),Object(c.b)("ul",{class:"apiIndex"},Object(c.b)("li",null,Object(c.b)("a",{href:"#key"},Object(c.b)("pre",null,"key: string"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#type"},Object(c.b)("pre",null,"type: DraftBlockType"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#text"},Object(c.b)("pre",null,"text: string"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#characterlist"},Object(c.b)("pre",null,"characterList: List<CharacterMetadata>"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#depth"},Object(c.b)("pre",null,"depth: number"))),Object(c.b)("li",null,Object(c.b)("a",{href:"#data"},Object(c.b)("pre",null,"data: Map<any, any>")))),Object(c.b)("h2",{id:"methods"},"Methods"),Object(c.b)("h3",{id:"getkey"},Object(c.b)("inlineCode",{parentName:"h3"},"getKey()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getKey(): string\n")),Object(c.b)("p",null,"Returns the string key for this ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),". Block keys are alphanumeric string. It is recommended to use ",Object(c.b)("inlineCode",{parentName:"p"},"generateRandomKey")," to generate block keys."),Object(c.b)("h3",{id:"gettype"},Object(c.b)("inlineCode",{parentName:"h3"},"getType()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getType(): DraftBlockType\n")),Object(c.b)("p",null,"Returns the type for this ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),". Type values are largely analogous to\nblock-level HTML elements."),Object(c.b)("h3",{id:"gettext"},Object(c.b)("inlineCode",{parentName:"h3"},"getText()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getText(): string\n")),Object(c.b)("p",null,"Returns the full plaintext for this ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),". This value does not contain\nany styling, decoration, or HTML information."),Object(c.b)("h3",{id:"getcharacterlist"},Object(c.b)("inlineCode",{parentName:"h3"},"getCharacterList()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getCharacterList(): List<CharacterMetadata>\n")),Object(c.b)("p",null,"Returns an immutable ",Object(c.b)("inlineCode",{parentName:"p"},"List")," of ",Object(c.b)("inlineCode",{parentName:"p"},"CharacterMetadata")," objects, one for each character in the ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),". (See ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api-reference-character-metadata"}),"CharacterMetadata")," for details.)"),Object(c.b)("p",null,"This ",Object(c.b)("inlineCode",{parentName:"p"},"List")," contains all styling and entity information for the block."),Object(c.b)("h3",{id:"getlength"},Object(c.b)("inlineCode",{parentName:"h3"},"getLength()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getLength(): number\n")),Object(c.b)("p",null,"Returns the length of the plaintext for the ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),"."),Object(c.b)("p",null,"This value uses the standard JavaScript ",Object(c.b)("inlineCode",{parentName:"p"},"length")," property for the string, and is therefore not Unicode-aware -- surrogate pairs will be counted as two characters."),Object(c.b)("h3",{id:"getdepth"},Object(c.b)("inlineCode",{parentName:"h3"},"getDepth()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getDepth(): number\n")),Object(c.b)("p",null,"Returns the depth value for this block, if any. This is currently used only for list items."),Object(c.b)("h3",{id:"getinlinestyleat"},Object(c.b)("inlineCode",{parentName:"h3"},"getInlineStyleAt()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getInlineStyleAt(offset: number): DraftInlineStyle\n")),Object(c.b)("p",null,"Returns the ",Object(c.b)("inlineCode",{parentName:"p"},"DraftInlineStyle")," value (an ",Object(c.b)("inlineCode",{parentName:"p"},"OrderedSet<string>"),") at a given offset within this ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),"."),Object(c.b)("h3",{id:"getentityat"},Object(c.b)("inlineCode",{parentName:"h3"},"getEntityAt()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getEntityAt(offset: number): ?string\n")),Object(c.b)("p",null,"Returns the entity key value (or ",Object(c.b)("inlineCode",{parentName:"p"},"null")," if none) at a given offset within this ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),"."),Object(c.b)("h3",{id:"getdata"},Object(c.b)("inlineCode",{parentName:"h3"},"getData()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"getData(): Map<any, any>\n")),Object(c.b)("p",null,"Returns block-level metadata."),Object(c.b)("h3",{id:"findstyleranges"},Object(c.b)("inlineCode",{parentName:"h3"},"findStyleRanges()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"findStyleRanges(\n  filterFn: (value: CharacterMetadata) => boolean,\n  callback: (start: number, end: number) => void\n): void\n")),Object(c.b)("p",null,"Executes a callback for each contiguous range of styles within this ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),"."),Object(c.b)("h3",{id:"findentityranges"},Object(c.b)("inlineCode",{parentName:"h3"},"findEntityRanges()")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"findEntityRanges(\n  filterFn: (value: CharacterMetadata) => boolean,\n  callback: (start: number, end: number) => void\n): void\n")),Object(c.b)("p",null,"Executes a callback for each contiguous range of entities within this ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock"),"."),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Note"),Object(c.b)("p",{parentName:"blockquote"},"Use ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://web.archive.org/web/20150623131347/http://facebook.github.io:80/immutable-js/docs/#/Map"}),"Immutable Map API"),"\nfor the ",Object(c.b)("inlineCode",{parentName:"p"},"ContentBlock")," constructor or to set properties.")),Object(c.b)("h3",{id:"key"},Object(c.b)("inlineCode",{parentName:"h3"},"key")),Object(c.b)("p",null,"See ",Object(c.b)("inlineCode",{parentName:"p"},"getKey()"),"."),Object(c.b)("h3",{id:"text"},Object(c.b)("inlineCode",{parentName:"h3"},"text")),Object(c.b)("p",null,"See ",Object(c.b)("inlineCode",{parentName:"p"},"getText()"),"."),Object(c.b)("h3",{id:"type"},Object(c.b)("inlineCode",{parentName:"h3"},"type")),Object(c.b)("p",null,"See ",Object(c.b)("inlineCode",{parentName:"p"},"getType()"),"."),Object(c.b)("h3",{id:"characterlist"},Object(c.b)("inlineCode",{parentName:"h3"},"characterList")),Object(c.b)("p",null,"See ",Object(c.b)("inlineCode",{parentName:"p"},"getCharacterList()"),"."),Object(c.b)("h3",{id:"depth"},Object(c.b)("inlineCode",{parentName:"h3"},"depth")),Object(c.b)("p",null,"See ",Object(c.b)("inlineCode",{parentName:"p"},"getDepth()"),"."),Object(c.b)("h3",{id:"data"},Object(c.b)("inlineCode",{parentName:"h3"},"data")),Object(c.b)("p",null,"See ",Object(c.b)("inlineCode",{parentName:"p"},"getData()"),"."))}p.isMDXComponent=!0},147:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,j=d["".concat(l,".").concat(u)]||d[u]||s[u]||c;return n?r.a.createElement(j,i(i({ref:t},o),{},{components:n})):r.a.createElement(j,i({ref:t},o))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=u;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var o=2;o<c;o++)l[o]=n[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);