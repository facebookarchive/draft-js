(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{134:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var o=n(2),r=n(6),a=(n(0),n(147)),i={id:"advanced-topics-managing-focus",title:"Managing Focus"},c={id:"advanced-topics-managing-focus",title:"Managing Focus",description:"Managing text input focus can be a tricky task within React components. The browser",source:"@site/../docs/Advanced-Topics-Managing-Focus.md",permalink:"/docs/advanced-topics-managing-focus",editUrl:"https://github.com/facebook/draft-js/edit/master/docs/../docs/Advanced-Topics-Managing-Focus.md",lastUpdatedBy:"Noam Elboim",lastUpdatedAt:1526491267,sidebar:"docs",previous:{title:"Key Bindings",permalink:"/docs/advanced-topics-key-bindings"},next:{title:"Block Styling",permalink:"/docs/advanced-topics-block-styling"}},s=[{value:"Translating container clicks to focus",id:"translating-container-clicks-to-focus",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Managing text input focus can be a tricky task within React components. The browser\nfocus/blur API is imperative, so setting or removing focus via declarative means\npurely through ",Object(a.b)("inlineCode",{parentName:"p"},"render()")," tends to feel awkward and incorrect, and it requires\nchallenging attempts at controlling focus state."),Object(a.b)("p",null,"With that in mind, at Facebook we often choose to expose ",Object(a.b)("inlineCode",{parentName:"p"},"focus()")," methods\non components that wrap text inputs. This breaks the declarative paradigm,\nbut it also simplifies the work needed for engineers to successfully manage\nfocus behavior within their apps."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"Editor")," component follows this pattern, so there is a public ",Object(a.b)("inlineCode",{parentName:"p"},"focus()"),"\nmethod available on the component. This allows you to use a ref within your\nhigher-level component to call ",Object(a.b)("inlineCode",{parentName:"p"},"focus()")," directly on the component when needed."),Object(a.b)("p",null,"The event listeners within the component will observe focus changes and\npropagate them through ",Object(a.b)("inlineCode",{parentName:"p"},"onChange")," as expected, so state and DOM will remain\ncorrectly in sync."),Object(a.b)("h2",{id:"translating-container-clicks-to-focus"},"Translating container clicks to focus"),Object(a.b)("p",null,"Your higher-level component will most likely wrap the ",Object(a.b)("inlineCode",{parentName:"p"},"Editor")," component in a\ncontainer of some kind, perhaps with padding to style it to match your app."),Object(a.b)("p",null,"By default, if a user clicks within this container but outside of the rendered\n",Object(a.b)("inlineCode",{parentName:"p"},"Editor")," while attempting to focus the editor, the editor will have no awareness\nof the click event. It is therefore recommended that you use a click listener\non your container component, and use the ",Object(a.b)("inlineCode",{parentName:"p"},"focus()")," method described above to\napply focus to your editor."),Object(a.b)("p",null,"The ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/facebook/draft-js/tree/master/examples/draft-0-10-0/plaintext"}),"plaintext editor example"),",\nfor instance, uses this pattern."))}p.isMDXComponent=!0},147:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=o,f=u["".concat(i,".").concat(b)]||u[b]||d[b]||a;return n?r.a.createElement(f,c(c({ref:t},l),{},{components:n})):r.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);