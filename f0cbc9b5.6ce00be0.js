(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{143:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),o=(n(0),n(147)),c={id:"api-reference-rich-utils",title:"RichUtils"},i={id:"api-reference-rich-utils",title:"RichUtils",description:"The RichUtils module is a static set of utility functions for rich text",source:"@site/../docs/APIReference-RichUtils.md",permalink:"/docs/api-reference-rich-utils",editUrl:"https://github.com/facebook/draft-js/edit/master/docs/../docs/APIReference-RichUtils.md",lastUpdatedBy:"Yangshun Tay",lastUpdatedAt:1575407386,sidebar:"docs",previous:{title:"Data Conversion",permalink:"/docs/api-reference-data-conversion"},next:{title:"AtomicBlockUtils",permalink:"/docs/api-reference-atomic-block-utils"}},l=[{value:"Static Methods",id:"static-methods",children:[{value:"<code>currentBlockContainsLink()</code>",id:"currentblockcontainslink",children:[]},{value:"<code>getCurrentBlockType()</code>",id:"getcurrentblocktype",children:[]},{value:"<code>handleKeyCommand()</code>",id:"handlekeycommand",children:[]},{value:"<code>insertSoftNewline()</code>",id:"insertsoftnewline",children:[]},{value:"<code>onBackspace()</code>",id:"onbackspace",children:[]},{value:"<code>onDelete()</code>",id:"ondelete",children:[]},{value:"<code>onTab()</code>",id:"ontab",children:[]},{value:"<code>toggleBlockType()</code>",id:"toggleblocktype",children:[]},{value:"<code>toggleCode()</code>",id:"togglecode",children:[]},{value:"<code>toggleInlineStyle()</code>",id:"toggleinlinestyle",children:[]},{value:"<code>toggleLink()</code>",id:"togglelink",children:[]},{value:"<code>tryToRemoveBlockStyle()</code>",id:"trytoremoveblockstyle",children:[]}]}],d={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"RichUtils")," module is a static set of utility functions for rich text\nediting."),Object(o.b)("p",null,"In each case, these methods accept ",Object(o.b)("inlineCode",{parentName:"p"},"EditorState")," objects with relevant\nparameters and return ",Object(o.b)("inlineCode",{parentName:"p"},"EditorState")," objects."),Object(o.b)("h2",{id:"static-methods"},"Static Methods"),Object(o.b)("h3",{id:"currentblockcontainslink"},Object(o.b)("inlineCode",{parentName:"h3"},"currentBlockContainsLink()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"currentBlockContainsLink(\n  editorState: EditorState\n): boolean\n")),Object(o.b)("h3",{id:"getcurrentblocktype"},Object(o.b)("inlineCode",{parentName:"h3"},"getCurrentBlockType()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"getCurrentBlockType(\n  editorState: EditorState\n): string\n")),Object(o.b)("h3",{id:"handlekeycommand"},Object(o.b)("inlineCode",{parentName:"h3"},"handleKeyCommand()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"handleKeyCommand(\n  editorState: EditorState,\n  command: string\n): ?EditorState\n")),Object(o.b)("h3",{id:"insertsoftnewline"},Object(o.b)("inlineCode",{parentName:"h3"},"insertSoftNewline()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"insertSoftNewline(\n  editorState: EditorState\n): EditorState\n")),Object(o.b)("h3",{id:"onbackspace"},Object(o.b)("inlineCode",{parentName:"h3"},"onBackspace()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"onBackspace(\n  editorState: EditorState\n): EditorState?\n")),Object(o.b)("h3",{id:"ondelete"},Object(o.b)("inlineCode",{parentName:"h3"},"onDelete()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"onDelete(\n  editorState: EditorState\n): EditorState?\n")),Object(o.b)("h3",{id:"ontab"},Object(o.b)("inlineCode",{parentName:"h3"},"onTab()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"onTab(\n  event: SyntheticEvent,\n  editorState: EditorState,\n  maxDepth: integer\n): EditorState\n")),Object(o.b)("h3",{id:"toggleblocktype"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleBlockType()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"toggleBlockType(\n  editorState: EditorState,\n  blockType: string\n): EditorState\n")),Object(o.b)("h3",{id:"togglecode"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleCode()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"toggleCode(\n  editorState: EditorState\n): EditorState\n")),Object(o.b)("h3",{id:"toggleinlinestyle"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleInlineStyle()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"toggleInlineStyle(\n  editorState: EditorState,\n  inlineStyle: string\n): EditorState\n")),Object(o.b)("p",null,"Toggle the specified inline style for the selection. If the\nuser's selection is collapsed, apply or remove the style for the\ninternal state. If it is not collapsed, apply the change directly\nto the document state."),Object(o.b)("h3",{id:"togglelink"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleLink()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"toggleLink(\n  editorState: EditorState,\n  targetSelection: SelectionState,\n  entityKey: string\n): EditorState\n")),Object(o.b)("h3",{id:"trytoremoveblockstyle"},Object(o.b)("inlineCode",{parentName:"h3"},"tryToRemoveBlockStyle()")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"tryToRemoveBlockStyle(\n  editorState: EditorState\n): ContentState?\n")))}b.isMDXComponent=!0},147:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),b=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=b(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=b(n),u=r,m=s["".concat(c,".").concat(u)]||s[u]||p[u]||o;return n?a.a.createElement(m,i(i({ref:t},d),{},{components:n})):a.a.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var d=2;d<o;d++)c[d]=n[d];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);