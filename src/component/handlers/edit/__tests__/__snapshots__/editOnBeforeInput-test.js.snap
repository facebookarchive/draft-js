// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`editor is updated with new text if it does not match current selection 1`] = `
Immutable.Record {
  "entityMap": Object {
    "__add": [Function],
    "__create": [Function],
    "__get": [Function],
    "__getAll": [Function],
    "__getLastCreatedEntityKey": [Function],
    "__loadWithEntities": [Function],
    "__mergeData": [Function],
    "__replaceData": [Function],
    "get": [Function],
    "last": [Function],
    "set": [Function],
  },
  "blockMap": Immutable.OrderedMap {
    "a": Immutable.Record {
      "key": "a",
      "type": "unstyled",
      "text": "Orsenal",
      "characterList": Immutable.List [
        Immutable.Record {
          "style": Immutable.OrderedSet [],
          "entity": null,
        },
        Immutable.Record {
          "style": Immutable.OrderedSet [],
          "entity": null,
        },
        Immutable.Record {
          "style": Immutable.OrderedSet [],
          "entity": null,
        },
        Immutable.Record {
          "style": Immutable.OrderedSet [],
          "entity": null,
        },
        Immutable.Record {
          "style": Immutable.OrderedSet [],
          "entity": null,
        },
        Immutable.Record {
          "style": Immutable.OrderedSet [],
          "entity": null,
        },
        Immutable.Record {
          "style": Immutable.OrderedSet [],
          "entity": null,
        },
      ],
      "depth": 0,
      "data": Immutable.Map {},
    },
  },
  "selectionBefore": Immutable.Record {
    "anchorKey": "a",
    "anchorOffset": 0,
    "focusKey": "a",
    "focusOffset": 1,
    "isBackward": false,
    "hasFocus": false,
  },
  "selectionAfter": Immutable.Record {
    "anchorKey": "a",
    "anchorOffset": 1,
    "focusKey": "a",
    "focusOffset": 1,
    "isBackward": false,
    "hasFocus": false,
  },
}
`;

exports[`editor selectionstate is updated if new text matches current selection 1`] = `
Immutable.Record {
  "anchorKey": "a",
  "anchorOffset": 1,
  "focusKey": "a",
  "focusOffset": 1,
  "isBackward": false,
  "hasFocus": false,
}
`;

exports[`editor selectionstate is updated if new text matches current selection and user selected backwards 1`] = `
Immutable.Record {
  "anchorKey": "a",
  "anchorOffset": 1,
  "focusKey": "a",
  "focusOffset": 1,
  "isBackward": false,
  "hasFocus": false,
}
`;
